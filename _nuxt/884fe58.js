(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{292:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var o=n(43),r=n(79),l=function(){function e(){Object(o.a)(this,e)}return Object(r.a)(e,[{key:"setSketch",value:function(e){this.sketch=e}},{key:"getSketch",value:function(){return this.sketch}}]),e}()},363:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return v}));n(104);var o=n(43),r=n(79),l=n(54),c=n(55),f=n(34),m=(n(27),n(320),n(11),n(344),n(321),n(322),n(323),n(324),n(325),n(326),n(327),n(328),n(329),n(330),n(331),n(332),n(333),n(334),n(335),n(336),n(337),n(338),n(339),n(340),n(341),n(342),n(343),n(291)),d=n(292);function h(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,o=Object(f.a)(e);if(t){var r=Object(f.a)(this).constructor;n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments);return Object(c.a)(this,n)}}var v=function(e){Object(l.a)(n,e);var t=h(n);function n(){var e;return Object(o.a)(this,n),(e=t.apply(this,arguments)).name="Fireflies",e}return Object(r.a)(n,[{key:"init",value:function(){this.firefliesGeometry=new m.j;for(var e=new Float32Array(90),t=new Float32Array(30),i=0;i<30;i+=1){var n=Math.random()*Math.PI*2,o=Math.random()*(2.8-1.5)+1.5,r=2.8-o+.2;e[3*i+0]=Math.cos(n)*r-1,e[3*i+1]=o,e[3*i+2]=0+Math.sin(n)*r,t[i]=.5*Math.random()+.1}this.firefliesGeometry.setAttribute("position",new m.i(e,3)),this.firefliesGeometry.setAttribute("aScale",new m.i(t,1)),this.firefliesMaterial=new m.zb({uniforms:{uTime:{value:0},uPixelRatio:{value:Math.min(window.devicePixelRatio,2)},uSize:{value:20}},vertexShader:"uniform float uTime;\nuniform float uPixelRatio;\nuniform float uSize;\n\nattribute float aScale;\n\nvoid main()\n{\n\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n    float scale = cos(uTime * modelPosition.y * modelPosition.x) * aScale;\n    modelPosition.x += cos(uTime * (1.0 / aScale) / 2.0 + modelPosition.x * 100.0) * aScale * 0.2;\n    modelPosition.y += sin(uTime * (1.0 / aScale) / 2.0 + modelPosition.y * 100.0) * aScale * 0.3;\n    modelPosition.z += sin(uTime * (1.0 / aScale) / 2.0 + modelPosition.z * 100.0) * aScale * 0.2;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectionPosition = projectionMatrix * viewPosition;\n\n    gl_Position = projectionPosition;\n\n    gl_PointSize = uSize * scale * uPixelRatio;\n    gl_PointSize *= (1.0 / - viewPosition.z);\n}",fragmentShader:"void main()\n{\n    float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n    float strength = 0.05 / distanceToCenter - 0.1;\n\n    gl_FragColor = vec4(1.0, 1.0, 1.0, strength);\n}",transparent:!0,blending:m.a,depthWrite:!1}),this.getSketch().getGui().add(this.firefliesMaterial.uniforms.uSize,"value").min(0).max(500).step(1).name("firefliesSize");var l=new m.mb(this.firefliesGeometry,this.firefliesMaterial);this.getSketch().getScene().add(l)}},{key:"update",value:function(e){this.firefliesMaterial.uniforms.uTime.value=e}},{key:"destroy",value:function(){this.firefliesGeometry.dispose(),this.firefliesMaterial.dispose()}}]),n}(d.a)}}]);